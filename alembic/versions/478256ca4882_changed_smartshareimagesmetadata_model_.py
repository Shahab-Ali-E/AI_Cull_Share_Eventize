"""changed SmartShareImagesMetaData model and temporary images metadata table

Revision ID: 478256ca4882
Revises: 7f7161cfc625
Create Date: 2025-04-22 11:34:34.111152

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '478256ca4882'
down_revision: Union[str, None] = '7f7161cfc625'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('celery_tasksetmeta')
    op.drop_table('celery_taskmeta')

    # Convert id from VARCHAR to UUID, adding USING clause for casting
    op.alter_column(
        'smart_share_images_metadata',
        'id',
        existing_type=sa.VARCHAR(),
        type_=postgresql.UUID(),
        existing_nullable=False,
        postgresql_using="id::uuid"
    )

    op.add_column(
        'temporary_culling_image_urls_metadata',
        sa.Column('image_download_path', sa.String(), nullable=False)
    )
    op.add_column(
        'temporary_culling_image_urls_metadata',
        sa.Column(
            'image_download_validity',
            sa.DateTime(timezone=True),
            server_default=sa.text('now()'),
            nullable=True
        )
    )
    op.drop_column('temporary_culling_image_urls_metadata', 'url')
    op.drop_column('temporary_culling_image_urls_metadata', 'validity')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column(
        'temporary_culling_image_urls_metadata',
        sa.Column(
            'validity',
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text('now()'),
            autoincrement=False,
            nullable=True
        )
    )
    op.add_column(
        'temporary_culling_image_urls_metadata',
        sa.Column('url', sa.VARCHAR(), autoincrement=False, nullable=False)
    )
    op.drop_column('temporary_culling_image_urls_metadata', 'image_download_validity')
    op.drop_column('temporary_culling_image_urls_metadata', 'image_download_path')

    # Revert id back to VARCHAR
    op.alter_column(
        'smart_share_images_metadata',
        'id',
        existing_type=postgresql.UUID(),
        type_=sa.VARCHAR(),
        existing_nullable=False
    )

    op.create_table(
        'celery_taskmeta',
        sa.Column('id', sa.INTEGER(), autoincrement=False, nullable=False),
        sa.Column('task_id', sa.VARCHAR(length=155), autoincrement=False, nullable=True),
        sa.Column('status', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
        sa.Column('result', postgresql.BYTEA(), autoincrement=False, nullable=True),
        sa.Column('date_done', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
        sa.Column('traceback', sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column('name', sa.VARCHAR(length=155), autoincrement=False, nullable=True),
        sa.Column('args', postgresql.BYTEA(), autoincrement=False, nullable=True),
        sa.Column('kwargs', postgresql.BYTEA(), autoincrement=False, nullable=True),
        sa.Column('worker', sa.VARCHAR(length=155), autoincrement=False, nullable=True),
        sa.Column('retries', sa.INTEGER(), autoincrement=False, nullable=True),
        sa.Column('queue', sa.VARCHAR(length=155), autoincrement=False, nullable=True),
        sa.PrimaryKeyConstraint('id', name='celery_taskmeta_pkey'),
        sa.UniqueConstraint('task_id', name='celery_taskmeta_task_id_key')
    )
    op.create_table(
        'celery_tasksetmeta',
        sa.Column('id', sa.INTEGER(), autoincrement=False, nullable=False),
        sa.Column('taskset_id', sa.VARCHAR(length=155), autoincrement=False, nullable=True),
        sa.Column('result', postgresql.BYTEA(), autoincrement=False, nullable=True),
        sa.Column('date_done', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
        sa.PrimaryKeyConstraint('id', name='celery_tasksetmeta_pkey'),
        sa.UniqueConstraint('taskset_id', name='celery_tasksetmeta_taskset_id_key')
    )
    # ### end Alembic commands ###
